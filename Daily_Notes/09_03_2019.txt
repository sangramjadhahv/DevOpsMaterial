### How to do password base authentication in SSH#

.pem file >> Private Key  >> Private key authentication




Erlier we have seen Passwordless authentication using Private Key while login to SSH. i.e we are importing .ppk file while login to putty i.e SSH

 /etc/ssh/sshd_config

vi  /etc/ssh/sshd_config

search anything in file
/Password

Go to next record by press "n"

Earlier this
#PasswordAuthentication yes
#PermitEmptyPasswords no
PasswordAuthentication no

No Change to below
This will go to 
#PasswordAuthentication yes
remmove # as it is commented
and comment out to - 'PasswordAuthentication no'


PasswordAuthentication yes
#PermitEmptyPasswords no
#PasswordAuthentication no



- Search again word > PermitRootLogin

vi  /etc/ssh/sshd_config

Search PermitRootLogin
#PermitRootLogin yes     >>> Remove the commented by removing #

PermitRootLogin yes
Save the file by :wq!



>> Run command - service sshd restart

sshd is demon i.e continius runnig file. 

[root@ip-172-31-29-73 shellscripting]# service sshd restart
Redirecting to /bin/systemctl restart sshd.service
[root@ip-172-31-29-73 shellscripting]# passwd
Changing password for user root.
New password:
Retype new password:
passwd: all authentication tokens updated successfully.
[root@ip-172-31-29-73 shellscripting]#



>>> Open new Putty session

Host - root@public_Ip_Address_Of_machine

Host - root@13.232.164.48

Click OK

Enter new created Password in above step - Sanga@55

So able to login as root without giving Authentication Key (.ppk file)

## Advance Shell Scripting ######

I have huge CSV file and interact with it-
sample.csv


Commands-

head unirank.csv
  head -n 25 unirank.csv
  yum install python3-csvkit
  head  unirank.csv | csvlook
  head -n 25 unirank.csv | csvlook
  grep -i "college" unirank.csv | csvlook
  wc -l unirank.csv
  grep -i "college" unirank.csv | wc -l
  grep "CA" unirank.csv | csvlook
  
  Finding the number of institutes in all states
  cat unirank.csv | cut -f1,3 -d, | csvlook
  cat unirank.csv | cut -f1,3 -d, | sort -k 2 -t"," |csvlook
  cat unirank.csv | cut -f3 -d, | sort | uniq -c | csvlook
  
  correlation between university tuition and ranks (cat, cut, tail and redirect)
  cat unirank.csv | cut -f4,6 -d, > udata.csv
  sudo pip install bashplotlib
  cat udata.csv| tail -n +2 | scatter
  
  
  
  *** locate command in ubantu machine -
  
  locate command locates any file name.
  
  
  
  #### cat unirank.csv | cut -f4,6 -d, > udata.csv
  
  Cut the rows from 4 to 6 ( in cut command by default sapce is delimeter so here we have given ,( comma ) as delimeter i.e -d,    so it will consider , seperated records as row) and update that to new file udata.csv
  
  
   
   
   Scenario:- 
   
  How to copy file "f1" from one system eg Windows and paste to new System e.g Linux
   
  1) Use scp command 
   
   For ec2-user
   
   vi /home/ec2-user/.bashrc
   
   comment below line in .bashrc as this was blocking execution of copy file . Below line we have added externally in earlier demo so actually this line wont present in .bashrc file
   echo "This is New Shell"   


      Use Git Bash
On git bash on windows our local machine 

	  go to path where u have saved file to copy and git bash here
	  
   scp [-i pem_file_path] f1 ec2-user@<ip_address_second_machine>:/opt/Devops/Shell
   
   $ scp -i awsdemo.pem CopyFileToOtherMachine_1.txt ec2-user@13.232.164.48:/tmp

go to unix machine and check file copied or not

[ec2-user@ip-172-31-29-73 ~]$ cd /tmp
[ec2-user@ip-172-31-29-73 tmp]$
[ec2-user@ip-172-31-29-73 tmp]$ ls
CopyFileToOtherMachine_1.txt  CopyFileToOtherMachine.txt  systemd-private-206a9c268e9348e7948610ebdb5cc0df-chronyd.service-8Uf8yt
[ec2-user@ip-172-31-29-73 tmp]$


 2)  For root user (As root user we have done password less authentication so no need to give .pem file path 
   $ scp CopyFileToOtherMachine.txt root@13.232.164.48:/tmp

we can use -v to check console output like debug
   
    $ scp -v CopyFileToOtherMachine.txt root@13.232.164.48:/tmp
   
	  
	  try -
	  $ scp -i awsdemo.pem CopyFileToOtherMachine_1.txt ec2-user@13.232.164.48:/tmp

Now 
   
   
   This will fail as ec2-user does noyt ahve permission to write in /opt/Devops/Shell
   So use "tmp" directory
   
   
  scp -i CopyFileToOtherMachine_1.txt ec2-user@13.232.164.48:/tmp
